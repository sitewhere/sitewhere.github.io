<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
	xmlns="http://sitewhere.io/schema/sitewhere/microservice/common/datastore"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://sitewhere.io/schema/sitewhere/microservice/common/datastore"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://sitewhere.io/schema/sitewhere/microservice/common"
		schemaLocation="http://sitewhere.io/schema/sitewhere/microservice/common/current/microservice-common.xsd" />

	<!-- Used as a placeholder for datastores to allow substitutionGroups -->
	<xsd:element name="abstract-datastore" abstract="true"
		type="abstractDatastoreType">
		<xsd:annotation>
			<xsd:documentation>
				A placeholder for datastore elements.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<!-- Common datastore information -->
	<xsd:complexType name="abstractDatastoreType" />

	<!-- Choices for potential device management datastores -->
	<xsd:element name="device-management-datastore">
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="mongodb-datastore" />
				<xsd:element ref="mongodb-datastore-reference" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>

	<!-- Choices for potential event management datastores -->
	<xsd:element name="event-management-datastore">
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="cassandra-datastore" />
				<xsd:element ref="cassandra-datastore-reference" />
				<xsd:element ref="influxdb-datastore" />
				<xsd:element ref="influxdb-datastore-reference" />
				<xsd:element ref="mongodb-datastore" />
				<xsd:element ref="mongodb-datastore-reference" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>

	<!-- Choices for potential device state datastores -->
	<xsd:element name="device-state-datastore">
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="mongodb-datastore" />
				<xsd:element ref="mongodb-datastore-reference" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>

	<!-- Cassandra datastore reference -->
	<xsd:element name="cassandra-datastore-reference" type="cassandraDatastoreReferenceType"
		substitutionGroup="abstract-datastore">
		<xsd:annotation>
			<xsd:documentation>
				Connects to Apache Cassandra using a globally
				defined configuration.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="cassandraDatastoreReferenceType">
		<xsd:complexContent>
			<xsd:extension base="abstractDatastoreType">
				<xsd:attribute name="id" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Unique id for global datastore configuration.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Custom Apache Cassandra datastore definition -->
	<xsd:element name="cassandra-datastore" type="cassandraDatastoreType"
		substitutionGroup="abstract-datastore">
		<xsd:annotation>
			<xsd:documentation>
				Creates a custom Apache Cassandra datastore that
				does not reference a global configuration.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="cassandraDatastoreType">
		<xsd:complexContent>
			<xsd:extension base="abstractDatastoreType">
				<xsd:attributeGroup ref="cassandra-attributes" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Apache Cassandra datastore attributes -->
	<xsd:attributeGroup name="cassandra-attributes">
		<xsd:attribute name="contactPoints" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Comma-delimited list of cluster contact points.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="keyspace" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Keyspace used for interacting with data.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>

	<!-- MongoDB datastore reference -->
	<xsd:element name="mongodb-datastore-reference" type="mongoDatastoreReferenceType"
		substitutionGroup="abstract-datastore">
		<xsd:annotation>
			<xsd:documentation>
				Connects to MongoDB using a globally defined
				configuration.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="mongoDatastoreReferenceType">
		<xsd:complexContent>
			<xsd:extension base="abstractDatastoreType">
				<xsd:attribute name="id" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Unique id for global datastore configuration.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Custom MongoDB datastore definition -->
	<xsd:element name="mongodb-datastore" type="mongoDatastoreType"
		substitutionGroup="abstract-datastore">
		<xsd:annotation>
			<xsd:documentation>
				Creates a custom MongoDB datastore that does not
				reference a global configuration.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="mongoDatastoreType">
		<xsd:complexContent>
			<xsd:extension base="abstractDatastoreType">
				<xsd:attributeGroup ref="mongo-attributes" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- MongoDB datastore attributes -->
	<xsd:attributeGroup name="mongo-attributes">
		<xsd:attribute name="hostname" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Server hostname for MongoDB instance.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="port" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Server port for MongoDB instance.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="databaseName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>MongoDB database name for SiteWhere storage.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="authDatabaseName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Authentication database name.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="username" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Username used to authenticate.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="password" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Password used to authenticate.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="replicaSetName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Name of replica set if using replication.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="autoConfigureReplication" type="xsd:boolean">
			<xsd:annotation>
				<xsd:documentation>Indicates whether replication should be
					configured automatically when multiple hosts/ports are specified.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>

	<!-- Alternate InfluxDB datastore reference -->
	<xsd:element name="influxdb-datastore-reference" type="influxDatastoreReferenceType"
		substitutionGroup="abstract-datastore">
		<xsd:annotation>
			<xsd:documentation>
				Connects to InfluxDB using a globally defined
				configuration.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="influxDatastoreReferenceType">
		<xsd:complexContent>
			<xsd:extension base="abstractDatastoreType">
				<xsd:attribute name="id" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Unique id for global datastore configuration.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Custom InfluxDB datastore definition -->
	<xsd:element name="influxdb-datastore" type="influxDatastoreType"
		substitutionGroup="abstract-datastore">
		<xsd:annotation>
			<xsd:documentation>
				Creates a custom InfluxDB datastore that does not
				reference a global configuration.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="influxDatastoreType">
		<xsd:complexContent>
			<xsd:extension base="abstractDatastoreType">
				<xsd:attributeGroup ref="influx-attributes" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Filter operation type -->
	<xsd:simpleType name="influxDbLogLevels">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none" />
			<xsd:enumeration value="basic" />
			<xsd:enumeration value="headers" />
			<xsd:enumeration value="full" />
		</xsd:restriction>
	</xsd:simpleType>

	<!-- Attributes for configuring InfluxDB event storage -->
	<xsd:attributeGroup name="influx-attributes">
		<xsd:attribute name="hostname" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Hostname for InfluxDB instance.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="port" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Server port for InfluxDB instance.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="username" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Username used to connect.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="password" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Password used to connect.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="database" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Database where events are stored.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="retention" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Retention identifier for events.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="logLevel" type="influxDbLogLevels"
			use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Indicates the amount of logging output for
					debugging interactions with InfluxDB.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="enableBatch" type="xsd:boolean">
			<xsd:annotation>
				<xsd:documentation>Enable batch delvery of events.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="batchChunkSize" type="xsd:int">
			<xsd:annotation>
				<xsd:documentation>Max number of events to cache before writing.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="batchIntervalMs" type="xsd:int">
			<xsd:annotation>
				<xsd:documentation>Max interval (in ms) to wait before writing.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>

	<!-- HBase datastore attributes -->
	<xsd:attributeGroup name="hbase-attributes">
		<xsd:attribute name="quorum" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>ZooKeeper quorum address</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="zookeeperClientPort" type="xsd:int"
			use="optional">
			<xsd:annotation>
				<xsd:documentation>ZooKeeper client port. Defaults to 2181.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="zookeeperZnodeParent" type="xsd:string"
			use="optional">
			<xsd:annotation>
				<xsd:documentation>ZooKeeper znode parent. Defaults to '/hbase'.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="zookeeperZnodeRootServer" type="xsd:string"
			use="optional">
			<xsd:annotation>
				<xsd:documentation>ZooKeeper znode root server. Defaults to
					'root-region-server'.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
</xsd:schema>