<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
	xmlns="http://sitewhere.io/schema/sitewhere/microservice/device-registration"
	xmlns:sw="http://sitewhere.io/schema/sitewhere/microservice/common"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://sitewhere.io/schema/sitewhere/microservice/device-registration"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import
		namespace="http://sitewhere.io/schema/sitewhere/microservice/common"
		schemaLocation="http://sitewhere.io/schema/sitewhere/microservice/common/current/microservice-common.xsd" />

	<xsd:element name="device-registration"
		type="deviceRegistrationType">
		<xsd:annotation>
			<xsd:documentation>
				Provides configuration information for the
				SiteWhere device registration microservice.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<!-- Contains information about device registration -->
	<xsd:complexType name="deviceRegistrationType">
		<xsd:all>
			<xsd:element ref="abstract-registration-manager" />
		</xsd:all>
	</xsd:complexType>

	<!-- Used as a placeholder for registration manager elements to allow substitutionGroups -->
	<xsd:element name="abstract-registration-manager"
		abstract="true" type="abstractRegistrationManagerType">
		<xsd:annotation>
			<xsd:documentation>
				A placeholder for registration manager elements.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<!-- Common registration manager element information -->
	<xsd:complexType name="abstractRegistrationManagerType" />

	<!-- Default registration manager implementation -->
	<xsd:element name="default-registration-manager"
		type="defaultRegistrationManagerType"
		substitutionGroup="abstract-registration-manager">
		<xsd:annotation>
			<xsd:documentation>
				Installs the default registration manager
				implementation.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="defaultRegistrationManagerType">
		<xsd:complexContent>
			<xsd:extension base="abstractRegistrationManagerType">
				<xsd:attribute name="allowNewDevices"
					type="xsd:boolean">
					<xsd:annotation>
						<xsd:documentation>Indicates whether new devices should be allowed
							to register. If set to false, devices not already in the system
							will be rejected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="useDefaultDeviceType"
					type="xsd:boolean">
					<xsd:annotation>
						<xsd:documentation>Indicates whether the device type should
							automatically be chosen if not passed with registration request.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="defaultDeviceTypeToken"
					type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Token for device type used in device
							auto-creation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="useDefaultCustomer"
					type="xsd:boolean">
					<xsd:annotation>
						<xsd:documentation>Indicates whether a default customer should be
							used when creating a default device assignment.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="defaultCustomerToken"
					type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Token for customer used in auto assignment.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="useDefaultArea"
					type="xsd:boolean">
					<xsd:annotation>
						<xsd:documentation>Indicates whether a default area should be used
							when creating a default device assignment.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="defaultAreaToken"
					type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Token for area used in auto assignment.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

</xsd:schema>