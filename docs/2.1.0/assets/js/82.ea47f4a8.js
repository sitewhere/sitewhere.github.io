(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{234:function(e,t,a){"use strict";a.r(t);var s=a(1),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("Seo"),e._v(" "),a("p",[e._v("SiteWhere includes a comprehensive object model which contains\na hierarchy of entities intended to represent real-world objects\nthat interact with IoT applications. Many of the concepts remain\nfairly generic so that a variety of potential vertical markets may\nbe represented by the same model.")]),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("Most SiteWhere entities have two separate unique identifiers. The\nprimary identifier is a "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier",target:"_blank",rel:"noopener noreferrer"}},[e._v("UUID"),a("OutboundLink")],1),e._v("\nwhich is assigned by the system when the entity is created and\ndoes not change over the lifetime of the entity. A second identifier,\nwhich is unique within the entity type, is a "),a("em",[e._v("token")]),e._v(" which is a\nstring assigned via the APIs and updated at any time. This approach\nallows the token for an entity to change over time if needed\nwithout the need to update the identifier in relations that reference\nthe entity. All API operations act on the entity token, while all\ninternal references between entities use the internal UUID.")]),e._v(" "),e._m(2),e._v(" "),a("p",[e._v("One of the primary functions of an IoT platform is to represent\nthe devices that the platform interacts with. SiteWhere provides\na comprehensive model for capturing information about the devices\nmanaged by the system and for organizing them so that context is\nprovided around the data generated by the devices.")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("Each device type may contain a list of commands that are accepted by\nthe device. The commands are identified by a namespace and unique\nname, along with a list of strongly-typed, named parameters.\nExternal actors may issue device command invocation events which\nin turn communicate with devices to transmit a command payload\nto the device.")]),e._v(" "),e._m(7),e._v(" "),a("p",[e._v("Each device type may have many potential status values that reflect\nthe internal state of a device. A device status contains information\nsuch as a unique code, icon, display text, and color information that\nmay be used to render the status indicator in applications that use\nthe SiteWhere APIs.")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),a("p",[e._v("The concept of a customer is used to infer ownership of a device.\nA given device may be assigned to many different customers over its lifetime.\nWhen events are recorded for a device, the events include a reference\nto the customer assigned to the device at the time of the event.")]),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),a("p",[e._v("The concept of an area is used to establish geospatial context for a device.\nA given device may be assigned to many areas over its lifetime. When events\nare recorded for a device, they include a reference to the area assigned to\nthe device at the time of the event.")]),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),a("p",[e._v("Zones are bounded geospatial entities which have areas as parents. An area may\ncontain any number of zones, which are used to signify a portion of the area\nthat has particular significance. For instance, if modeling an airport as an\narea, restricted access sections could be marked as zones. When processing events\nfrom a device located in the airport, alert events might be generated when\nentering restricted zones. Along with the bounding lat/longs for a zone, a\nbackground color, border color, and opacity are stored so that zones may be\nrendered on top of maps or floorplans dynamically based on the stored metadata.")]),e._v(" "),e._m(24),e._v(" "),a("p",[e._v("Devices are often deployed in association with real-world assets which derive\nsome service from the device. Use cases include:")]),e._v(" "),e._m(25),e._v(" "),a("p",[e._v("SiteWhere provides an asset management model for storing assets that may be\nassociated with system devices. External asset management systems may be\nprovided based on the same set of APIs in cases where assets need to be\nmanaged externally.")]),e._v(" "),e._m(26),e._v(" "),a("p",[e._v("Asset types represent a class of assets that may be used in the system. These\ngenerally correspond to entries in a product catalog and would be identified\nwith a SKU rather than a serial number. Asset types capture common metadata\nfor assets such as weight, dimensions, or other facets that apply across all\nassets of the type.")]),e._v(" "),e._m(27),e._v(" "),a("p",[e._v("Assets are instances of asset types and generally correspond to real-world\nentites that might have a unique serial number. Assets may be associated with\none or more devices based on device assignments and these assignments may\nchange over time. The device assignment history reflects the list of associated\nassets over time. For instance, a temporary security badge that is associated\nwith person assets will have a history of every person the badge was assigned\nto. All events for the badge would also be tied to the assignments and could\nbe filtered based on the person the badge was assigned to.")]),e._v(" "),e._m(28),e._v(" "),a("p",[e._v('The event management model is used to capture temporal events related to\ndevices. This includes telemetry data and device state changes as well as\naudit data such as command invocations and responses. Device events are\nstored as time-series data and are generally persisted separately from\ndevice management data due to their temporal nature and large scale\nrelative to the "master" data.')]),e._v(" "),a("p",[e._v("All device events share common fields such as the date the event\noccurred, the date the event was received, the id of the device,\nthe current device assignment and various associations which\nmay be used to filter/aggregate event data. In addition, each device\nevent subtype contains extra data specific to its function.")]),e._v(" "),e._m(29),e._v(" "),a("p",[e._v("Measurement events contain a measurement name and a measurement value and\nare used to capture telemetry data from devices. Examples include:")]),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),a("p",[e._v("Location events track location (latitude/longitude/elevation) for a device\nat a specific point in time. Location events may be used in conjunction\nwith areas and zones to perform logic in response to a device entering/exiting\nestablished boundaries.")]),e._v(" "),e._m(32),e._v(" "),a("p",[e._v("Alert events indicate that an exceptional condition has occurred. An alert\nincludes an alert type, message, alert level, and other information that\nprovides context as to the condition that occurred. Alerts may be used to\ntrigger other system actions based on business logic added to the event\nprocessing pipeline.")]),e._v(" "),e._m(33),e._v(" "),a("p",[e._v("Each time a command is invoked via the SiteWhere APIs, a command invocation\nevent is recorded. The event processing pipeline passes the event into the\ncommand delivery microservice, which handles packaging the command in the\ncorrect format and delivering the command to the target device. Command\ninvocation events also provide an audit trail of commands issued along with\nhow they were invoked and who invoked them.")]),e._v(" "),e._m(34),e._v(" "),a("p",[e._v("When commands are sent to devices, there are cases where the device\nsends data in response to the command. In cases where an originating\nevent id is sent along with other event data, the event is recorded\nas a command response so the response may be correlated back to the\nevent that originated it. This allows for tracking whether commands\nhave been received in cases where an acknowledgement is required.")]),e._v(" "),e._m(35),e._v(" "),a("p",[e._v("State change events are used to convey changes to internal device state\nas well as other system-level state changes such as presence detection\nupdates. Devices may send state change events for cases such as going\ninto sleep mode or detection of a low battery state.")])],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"domain-object-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#domain-object-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Domain Object Model")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"entity-identification"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entity-identification","aria-hidden":"true"}},[this._v("#")]),this._v(" Entity Identification")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"device-management-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-management-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Management Model")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"device-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Types")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The platform may interact with many types of devices, each with its own\ncharacteristics. These include aspects such as device hardware, configuration\noptions, status indicators, and available commands. SiteWhere "),t("em",[this._v("device types")]),this._v("\nare used to capture information about a class of devices with\nsimilar characteristics.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),t("p",[this._v("SiteWhere 2.0 "),t("em",[this._v("device types")]),this._v(" correspond to SiteWhere 1.x\n"),t("em",[this._v("device specifications")]),this._v(". All of the features from the previous\nmodel remain in 2.0.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"device-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-commands","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Commands")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"device-statuses"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-statuses","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Statuses")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"devices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devices","aria-hidden":"true"}},[this._v("#")]),this._v(" Devices")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Devices represent real-world instances of a device type that may\ninteract with the system. Each device has a unique "),t("em",[this._v("device token")]),this._v("\nwhich is used when registering, updating, or associating data with\nthe device.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"device-assignments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-assignments","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Assignments")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Devices may be associated with various entities over their lifetime in\norder to provide context for the device at a given point of time. The entity\nthat captures these associations is called a "),t("em",[this._v("device assignment")]),this._v(". Examples\nof device assignment associations include customer ownership, geospatial\nlocation, and association with various assets. A device assignment is\neffective for a given amount of time while it is considered "),t("em",[this._v("active")]),this._v(" and\nmay be marked as "),t("em",[this._v("released")]),this._v(" when no longer in effect. The list of device\nassignments over time provide a historical record for the device. Associations\nfrom the current device assignment are stored with device events in order\nto provide context when querying the event data.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"customer-associations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#customer-associations","aria-hidden":"true"}},[this._v("#")]),this._v(" Customer Associations")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"customer-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#customer-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Customer Types")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Customer types are used to group related types of customers. They are\nhierarchical in nature, so customer types may be parents or children of\nother customer types. For example, in the construction vertical, the\ncustomer type hierarchy might be "),t("strong",[this._v("Division")]),this._v(" > "),t("strong",[this._v("Municipality")]),this._v(" > "),t("strong",[this._v("Site")]),this._v(".\nExtra metadata and branding information may be attached to each customer type in order\nto provide more context.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"customers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#customers","aria-hidden":"true"}},[this._v("#")]),this._v(" Customers")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Customers are instances of customer types which represent real-world entites\nthat reflect ownership of devices. Each customer may have a parent customer\nand any number of child customers based on the hierarchy established in the\ncustomer types. An example of customers based on the customer type hierarchy\nabove would be "),t("strong",[this._v("Commercial Division")]),this._v(" > "),t("strong",[this._v("Atlanta")]),this._v(" > "),t("strong",[this._v("777 Peachtree Site")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"area-associations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#area-associations","aria-hidden":"true"}},[this._v("#")]),this._v(" Area Associations")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),t("p",[this._v("SiteWhere 2.0 "),t("em",[this._v("areas")]),this._v(" correspond to SiteWhere 1.x "),t("em",[this._v("sites")]),this._v(". Most of the features\nfrom the previous model remain in 2.0, but areas now define a bounding polygon\nrather than just the central lat/long used in 1.x.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"area-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#area-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Area Types")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("Area types provide context for areas and are arranged in a parent-child\nhierarchy. In general, parent area types are intended to be containers for\nthe child types. For instance, in a hotel vertical, the area type hierarchy\nmight be "),a("strong",[e._v("Region")]),e._v(" > "),a("strong",[e._v("Hotel")]),e._v(" > "),a("strong",[e._v("Floor")]),e._v(" > "),a("strong",[e._v("Room")]),e._v(". Extra metadata and\nbranding information may be attached to each area type in order to provide\nmore context.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"areas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#areas","aria-hidden":"true"}},[this._v("#")]),this._v(" Areas")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("Areas are instances of areas types which represent real-world geospatial\nlocations that provide context for devices. An area has a bounding polygon\nof lat/longs which defines the borders of the entity. An example of areas\nthat conform to the area type hierarchy above would be "),a("strong",[e._v("Southeast Region")]),e._v(" >\n"),a("strong",[e._v("Mariott Marquis")]),e._v(" > "),a("strong",[e._v("Floor 20")]),e._v(" > "),a("strong",[e._v("Room 2001")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"zones"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zones","aria-hidden":"true"}},[this._v("#")]),this._v(" Zones")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"asset-management-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asset-management-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Asset Management Model")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("a tracking device associated with an automobile in the fleet-tracking vertical")]),this._v(" "),t("li",[this._v("a badge associated with a person in the security vertical")]),this._v(" "),t("li",[this._v("a heart monitor associated with a bed in a healthcare veritcal")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"asset-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asset-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Asset Types")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"assets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assets","aria-hidden":"true"}},[this._v("#")]),this._v(" Assets")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"event-management-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-management-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Event Management Model")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"measurement-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#measurement-events","aria-hidden":"true"}},[this._v("#")]),this._v(" Measurement Events")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Fuel readings from heavy equipment on a contruction site")]),this._v(" "),t("li",[this._v("Heart rate for a heart monitor in a healthcare facility")]),this._v(" "),t("li",[this._v("Speed recorded for a vehicle in a fleet-tracking application")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"location-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#location-events","aria-hidden":"true"}},[this._v("#")]),this._v(" Location Events")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"alert-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alert-events","aria-hidden":"true"}},[this._v("#")]),this._v(" Alert Events")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"command-invocation-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command-invocation-events","aria-hidden":"true"}},[this._v("#")]),this._v(" Command Invocation Events")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"command-response-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command-response-events","aria-hidden":"true"}},[this._v("#")]),this._v(" Command Response Events")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"state-change-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-change-events","aria-hidden":"true"}},[this._v("#")]),this._v(" State Change Events")])}],!1,null,null,null);n.options.__file="objectmodel.md";t.default=n.exports}}]);