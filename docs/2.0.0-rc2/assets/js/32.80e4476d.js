(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{178:function(e,t,a){"use strict";a.r(t);var n=a(1),i=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("Beyond the core architectural changes, the SiteWhere 2.0 platform introduces\na number of new features intended to make it easier to use while improving\nsecurity and streamlining the system management workflow.")]),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("In SiteWhere 1.x, most of the configuration was done at the tenant level with\nno concept of system-wide settings. With the introduction of the concept of\na SiteWhere instance in 2.x, many settings can now be configured at a global\nlevel and referenced by tenants, allowing for centralized management.")]),e._v(" "),e._m(2),e._v(" "),a("p",[e._v("Configuration settings for data persistence are now available at the instance level,\nallowing database details to be specified globally and reused in tenants. The\ntenants can reference the configurations by id and are automatically updated\nif changes are made globally. There is still the option of configuring database\nsettings locally for tenants if global configuration is not needed. The\nmicroservices architecture also allows persistence settings to be controlled\nat a finer level (e.g. different databases for tenant device management and\nasset management) if desired.")]),e._v(" "),a("InlineImage",{attrs:{src:"/images/platform/persistence-configurations.png",caption:"Persistence Configuration"}}),e._v(" "),e._m(3),e._v(" "),a("p",[e._v("When configuring database connectivity settings such as hostname and database\nname, SiteWhere now allows for the use of variable substitution in names,\nallowing for per-tenant settings that are derived from a global expression.\nFor instance, this supports the existing approach of using a database per\ntenant when configuring MongoDB, but also supports other approaches such as\nhaving a separate MongoDB instance for each tenant by using variable substitution\nin the hostname.")]),e._v(" "),a("p",[e._v("The user interface also now directly supports the mapping of system environment\nvariables to override configuration settings. Using this approach, the microservice\ncan be configured externally (in the Docker compose file) to pass variables to\nconfigure SiteWhere components.")]),e._v(" "),a("InlineImage",{attrs:{src:"/images/platform/db-variable-substitution.png",caption:"Variable Sustitution"}}),e._v(" "),e._m(4),e._v(" "),a("p",[e._v("The 1.x implementation of InfluxDB for event management did not fully support\nmultitenancy. In the 2.0 platform, InfluxDB may be configured globally using\nvariable substitution so that each tenant has its own InfluxDB database. The\nupdates also include an upgrade to the latest version of the InfluxDB Java\nclient to support that latest bug fixes and performance improvements.")]),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("SiteWhere 2.0 features a new administrative user interface based on\n"),a("a",{attrs:{href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue"),a("OutboundLink")],1),e._v(" along with "),a("a",{attrs:{href:"https://vuetifyjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vuetify"),a("OutboundLink")],1),e._v("\nfor a look that is more consistent with Google "),a("a",{attrs:{href:"https://material.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Material Design"),a("OutboundLink")],1),e._v("\nguidelines. The interface is built in a component-oriented fashion for a\nmore efficient development workflow. The longer-term plan is to release\nreusable component libraries so that SiteWhere UI/API components can easily\nbe used in other Vue projects.")]),e._v(" "),a("InlineImage",{attrs:{src:"/images/platform/vue-user-interface.png",caption:"Vue User Interface"}}),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("A common complaint with the 1.x user interface was the non-intuitive workflow\nfor managing tenants. SiteWhere 2.0 moves tenant management and other aspects\nof global configuration to the landing page after login. Tenants may be easily\nadded and configured without the need to log out of the application as before.\nThe new approach also fixes issues with being unable to reconfigure tenants that\nfailed to start.")]),e._v(" "),a("InlineImage",{attrs:{src:"/images/platform/tenant-management.png",caption:"Tenant Management"}}),e._v(" "),e._m(7),e._v(" "),a("p",[e._v("Many aspects of the SiteWhere platform rely on pluggable scripts\nto allow for customized processing behaviors. In SiteWhere 1.x,\nscripts were stored on the filesystem and were not managed as first\nclass entities. SiteWhere 2.0 provides much more comprehensive\nsupport for scripting and adds many new script management features.\nA library of customized scripts can be quickly developed directly\nfrom within the SiteWhere administrative application and shared\nacross the entire distributed system without any manual intervention.")]),e._v(" "),e._m(8),e._v(" "),a("p",[e._v("In SiteWhere 2.0, scripts are stored in the central ZooKeeper tree,\nwhich allows for a publish/subscribe strategy where nodes can listen\nfor script updates they are interested in. In addition to the script\ncontent, a metadata structure has been added so that other aspects\nsuch as a human-readable name, description, script language, and\nother attributes may be captured. New APIs have been added, allowing\nscripts to be managed remotely without the need for direct interactions\nwith ZooKeeper.")]),e._v(" "),e._m(9),e._v(" "),a("p",[e._v("In addition to the core metadata for a script, SiteWhere 2.0 now tracks\nversioning for scripts as updates are made over time. New versions can\nbe added via the APIs, then activated so that they are broadcast to\ninterested parties. The new versioning mechanism allows scripts to be\nrolled back to previous versions if an update causes errors.")]),e._v(" "),e._m(10),e._v(" "),a("p",[e._v("The admistrative user interface now fully supports script management.\nBoth metadata and content for new scripts can be added via the user\ninterface, which supports syntax highlighting and many other features\nvia the "),a("a",{attrs:{href:"https://codemirror.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CodeMirror"),a("OutboundLink")],1),e._v(" editor. New versions\nmay be added and activated via the user interface.")]),e._v(" "),a("InlineImage",{attrs:{src:"/images/platform/scripting-ui.png",caption:"Scripting User Interface"}}),e._v(" "),e._m(11),e._v(" "),a("p",[e._v("System security is always a high priority for SiteWhere and the\n2.0 release contains a number of updates that bolster the\nexisting infrastructure.")]),e._v(" "),e._m(12),e._v(" "),a("p",[e._v("The SiteWhere REST APIs have moved from HTTP basic authentication\nto using "),a("a",{attrs:{href:"https://jwt.io/introduction/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JWT"),a("OutboundLink")],1),e._v(" to provide identity\ninformation. A separate REST API is now available that allows an\napplication/user to obtain a time-limited token based on their\nsystem credentials. All REST calls must now contain the JWT to\nprovide authentication information. The JWT is passed between microservices\nso that all nested calls may be authenticated as well. As such, any\ndirect access via gRPC channels must also provide a valid JWT.")]),e._v(" "),e._m(13),e._v(" "),a("p",[e._v("SiteWhere 1.x required a tenant authentication token to be passed in\nthe headers for REST calls. Since this was used to determine the tenant id\nrequested from the caller, there was the potential for problems if\ntokens were the same for multiple tenants. SiteWhere 2.0 requires two headers\nto be passed: one for the tenant id and a second for the authentication token.\nChanging the authentication token on a regular basis may be used as a strategy\nfor preventing unauthorized devices from registering with the system.")]),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),a("p",[e._v("A common complaint with the SiteWhere 1.x data model was that the unique ids for\nobjects (e.g. hardware id for a device) could not be changed after initial creation.\nIn 2.0, all core objects now have a UUID in addition to user-facing ids so that\nuser-facing identifiers may be changed without violating data integrity. With the\nupdate, device hardware ids, assignment tokens, etc may be updated without breaking\nreferential integrity.")])],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"new-platform-2-0-features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-platform-2-0-features","aria-hidden":"true"}},[this._v("#")]),this._v(" New Platform 2.0 Features")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"centralized-configuration-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centralized-configuration-management","aria-hidden":"true"}},[this._v("#")]),this._v(" Centralized Configuration Management")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"persistence-configurations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#persistence-configurations","aria-hidden":"true"}},[this._v("#")]),this._v(" Persistence Configurations")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"variable-replacement-in-datastore-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#variable-replacement-in-datastore-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Variable Replacement in Datastore Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"influxdb-improvements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#influxdb-improvements","aria-hidden":"true"}},[this._v("#")]),this._v(" InfluxDB Improvements")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"improved-administrative-user-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improved-administrative-user-interface","aria-hidden":"true"}},[this._v("#")]),this._v(" Improved Administrative User Interface")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"tenant-management-workflow-improvements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tenant-management-workflow-improvements","aria-hidden":"true"}},[this._v("#")]),this._v(" Tenant Management Workflow Improvements")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"improved-scripting-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improved-scripting-support","aria-hidden":"true"}},[this._v("#")]),this._v(" Improved Scripting Support")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"script-storage-and-metadata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-storage-and-metadata","aria-hidden":"true"}},[this._v("#")]),this._v(" Script Storage and Metadata")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"script-versioning"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-versioning","aria-hidden":"true"}},[this._v("#")]),this._v(" Script Versioning")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"scripting-user-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scripting-user-interface","aria-hidden":"true"}},[this._v("#")]),this._v(" Scripting User Interface")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"security-improvements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#security-improvements","aria-hidden":"true"}},[this._v("#")]),this._v(" Security Improvements")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"json-web-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#json-web-token","aria-hidden":"true"}},[this._v("#")]),this._v(" JSON Web Token")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"updated-security-headers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updated-security-headers","aria-hidden":"true"}},[this._v("#")]),this._v(" Updated Security Headers")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"data-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Data Model")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("A number of changes will be made to the core data model to accomodate new\nfunctionality. Some of them will involve renaming existing entites. For instance,\n"),a("em",[e._v("device specifications")]),e._v(" will be renamed to "),a("em",[e._v("device types")]),e._v(" to better reflect\ntheir role in the system. Other areas of the model will be expanding. For instance\nthe existing asset model will be expanded to differentiate between "),a("em",[e._v("assets")]),e._v(" and\n"),a("em",[e._v("asset types")]),e._v(" since the existing model is ambiguous. A new entity for "),a("em",[e._v("asset hierarchy")]),e._v("\nwill also be added so that assets can be grouped hierarchically.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"new-id-management-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-id-management-structure","aria-hidden":"true"}},[this._v("#")]),this._v(" New Id Management Structure")])}],!1,null,null,null);i.options.__file="features.md";t.default=i.exports}}]);